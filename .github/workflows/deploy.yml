

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
    tags: [ deployment ]

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: '17'
  #         distribution: 'corretto'
  #     - name: Get the version
  #       id: vars
  #       run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:10})
  #     - name: Docker login
  #       env:
  #         DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  #         DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  #         DOCKER_TOKEN: ${{ env.DOCKER_TOKEN }}
  #       run : |
  #         echo $DOCKER_PASSWORD | docker login -u="$DOCKER_USERNAME" --password-stdin
  #     - name: Grant execute permission for gradlew
  #       run: chmod +x gradlew
  #     - name: Build with Gradle
  #       run: ./gradlew clean build
  #     - name: Push the Docker image
  #       run: ./gradlew :app:dockerPush
  deploy:
    runs-on: ubuntu-latest
    steps:
    # - name: List images on remote Docker host
    #   uses: 38ri581oq480/docker-run-command-remote-host-action@v0.0.1
    #   with:
    #     ssh_host_key: ${{ secrets.DEPLOY_PUBLIC_KEY }}
    #     ssh_private_key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
    #     docker_host: 186.79.101.127
    #     docker_command: image ls
    #     docker_user: ${{ secrets.DEPLOY_USERNAME }}

    - name: install ssh keys
      # check this thread to understand why its needed:
      # <https://stackoverflow.com/a/70447517>
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.DEPLOY_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.DEPLOY_PUBLIC_KEY }} > ~/.ssh/known_hosts
    - name: connect and pull
      run: ssh ${{ secrets.DEPLOY_USERNAME }}@186.79.101.127 "docker compose pull && docker compose up -d && exit"
    - name: cleanup
      run: rm -rf ~/.ssh